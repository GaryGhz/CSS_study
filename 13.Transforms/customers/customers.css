/* 4. 扭曲和缩放操作
- 扭曲 使用 skew 函数 -> 该函数可以使元素沿 X 轴或者 Y 轴扭曲. 
  - skew 函数只接收一个参数, 效果和 skewX 函数一样
  - skewX函数将元素(左上)角往左边拖拽, skewY 函数将(左上)角往上面拖拽; 
    如果值是负数, 它会向右拖拽或者向下拖拽; 
    反正就是一个角被拖拽, 所以图片会被拖拽成菱形
- 缩放 使用 scale 函数 -> 帮助你沿着三个坐标轴缩放元素
  - scale 函数既可以缩放宽也可以缩放高: scale(2) 表示宽高都放大了两倍
  - scaleX 改变图片的宽度
    - 比如 scaleX(2) ,意思就是现在元素的宽度就是之前宽度的两倍
  - scaleY 改变图片的高度 */

main {
  padding-top: 2.5rem;
}

.testimonial {
  font-size: 1.2rem;
}

.testimonial__image-container {
  width: 60%;
  /* 2. 使用 min-width/height 和 max-width/height */
  max-width: 40rem;
  box-shadow: 3px 3px 5px 3px rgba(0, 0, 0, 0.3);
  transform: skew(20deg);
  /* 裁剪掉超出容器的图片 */
  overflow: hidden;
}

.testimonial__image {
  width: 100%;
  /* 记住这个技巧, 如果图像被包裹在容器里, 图片是属于行内元素的,由于行内元素的行为,
  通过添加 vertical-align: top; 就可以消除白边.
  另一种方法是将, 图像的 display 属性设置为 block */
  /* 用来去除图片下面的白边 */
  vertical-align: top;
  /* 因为图片容器 .testimonial__image-container 扭曲了20deg, 如果我们只想容器扭曲而图片保持原样, 那么就要抵消掉容器扭曲的效果 */
  transform: skew(-20deg) scale(1.4);
}

.testimonial__info {
  text-align: right;
  padding: 0.9rem;
}

#customer-2 .testimonial__info {
  text-align: left;
}

.testimonial__name {
  margin: 0.2rem;
  color: #ff5454;
  font-size: 2rem;
}

.testimonial__subtitle {
  margin: 0;
  font-size: 1.1rem;
  color: #ccc;
}

.testimonial__subtitle a {
  color: inherit;
  text-decoration: none;
}

.testimonial__subtitle a:hover, .testimonial__subtitle a:active {
  color: #7a7a7a;
}

.testimonial__text {
  margin: 0.2rem;
}

@media (min-width: 40rem) {
  .testimonial {
    margin: 3rem auto;
    max-width: 1500px;
    display: flex;
    justify-content: space-around;
    align-items: center;
  }
  .testimonial__image-container {
    width: 66%;
  }
  .testimonial__info {
    width: 30%;
  }
  #customer-2.testimonial {
    text-align: right;
  }
}